DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS user_likes CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS friend_list CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    user_id   integer generated by default as identity primary key,
    login     character varying(50)  not null,
    user_name CHARACTER VARYING(100) not null,
    email     CHARACTER VARYING(200) not null,
    birthday  date
);

create unique index IF NOT EXISTS users_email_unq
    on users (email);

create unique index IF NOT EXISTS users_login_unq
    on users (login);

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id   integer generated by default as identity primary key,
    mpa_name varchar(50)
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id   integer generated by default as identity primary key,
    genre_name varchar(50)
);

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id      integer generated by default as identity primary key,
    mpa_name    varchar(5)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      integer generated by default as identity primary key,
    film_name    varchar(100),
    description  varchar(200),
    release_date date,
    duration     integer,
    rate         integer,
    mpa          integer REFERENCES mpa (mpa_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id       integer REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id      integer REFERENCES genres (genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS user_likes
(
    film_id       integer REFERENCES films (film_id) ON DELETE CASCADE,
    user_id       integer REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friend_list
(
    user_id        integer REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id      integer REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, friend_id)
);